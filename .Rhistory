measure.vars = c('err.ours','err.dlingam','err.highD'),value.name='error')
res2 <- melt(data=results,id.vars=c('bn','n','p','rep','famSpec','famTrue','ratio'),
measure.vars = c('tm.ours','tm.dlingam','tm.highD'),value.name='time')
colnames(res)
res$algorithm <- ifelse(res$variable=='err.ours','ScoreLiNGAM',
ifelse(res$variable=='err.dlingam','DirectLiNGAM','HighDimLiNGAM'))
res$time <- res2$time
res$famSpec <- ifelse(res$famSpec=='laplace','Laplace',ifelse(res$famSpec=='logistic','Logistic',
'Scaled-t (df=10)' ))
res$famTrue <- ifelse(res$famTrue=='laplace','Laplace',ifelse(res$famTrue=='logistic','Logistic',
'Scaled-t (df=10)' ))
res$fam <- paste('Specified: ',res$famSpec,'\nTrue:',res$famTrue)
res <- dplyr::filter(res,!(bn %in% c('asia','sachs')))
res$bn <- paste(res$bn,'\np=',res$p,sep='')
res$network <- factor(res$bn,levels=sort(unique(res$bn)))
##
library(ggplot2)
library(ggpubr)
##
library(ggplot2)
library(ggpubr)
install.packages('ggpubr')
load('~/UCLA/nonGauss_scms/bnlearn architectures/adjmats.rdata')
fname <- '~/UCLA/nonGauss_scms/simulations/7 January 2022/results.rdata'
load(fname)
resMost <- dplyr::filter(results,bn!='andes') # since these are in next to .rdata files below
dim(results)
#
fname <- "~/UCLA/nonGauss_scms/simulations/7 January 2022/resultsAndesLaplaceSpec.rdata"
load(fname)
dim(results)
resMost <- rbind(resMost,results)
#
fname <- '~/UCLA/nonGauss_scms/simulations/7 January 2022/resultsAndesAndAlarm.rdata'
load(fname)
dim(results)
results <- rbind(resMost,results)
dim(results)
##
results$ratio <- round(results$n/results$p,digits=1)
colnames(results)
##
library(reshape2)
res <- melt(data=results,id.vars=c('bn','n','p','rep','famSpec','famTrue','ratio'),
measure.vars = c('err.ours','err.dlingam','err.highD'),value.name='error')
res2 <- melt(data=results,id.vars=c('bn','n','p','rep','famSpec','famTrue','ratio'),
measure.vars = c('tm.ours','tm.dlingam','tm.highD'),value.name='time')
colnames(res)
res$algorithm <- ifelse(res$variable=='err.ours','ScoreLiNGAM',
ifelse(res$variable=='err.dlingam','DirectLiNGAM','HighDimLiNGAM'))
res$time <- res2$time
res$famSpec <- ifelse(res$famSpec=='laplace','Laplace',ifelse(res$famSpec=='logistic','Logistic',
'Scaled-t (df=10)' ))
res$famTrue <- ifelse(res$famTrue=='laplace','Laplace',ifelse(res$famTrue=='logistic','Logistic',
'Scaled-t (df=10)' ))
res$fam <- paste('Specified: ',res$famSpec,'\nTrue:',res$famTrue)
res <- dplyr::filter(res,!(bn %in% c('asia','sachs')))
res$bn <- paste(res$bn,'\np=',res$p,sep='')
res$network <- factor(res$bn,levels=sort(unique(res$bn)))
##
library(ggplot2)
library(ggpubr)
install.packages('ggpubr')
install.packages('lme4')
install.packages('nloptr')
devtools::install_cran('ggpubr')
devtools::install_cran('rstatix')
p1 <- ggplot(res,aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(cols=vars(fam),rows=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError2.png',
plot=p1,units='in',width=6.75*2,height=3.25*2)
p1a <- ggplot(dplyr::filter(res,famIndic==TRUE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
# library(ggpubr)
res$famIndic <- ifelse(res$famSpec==res$famTrue,TRUE,FALSE)
p1a <- ggplot(dplyr::filter(res,famIndic==TRUE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1a
#
p1b <- ggplot(dplyr::filter(res,famIndic==FALSE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1b
unique(res$bn)
unique(res$bn)
res$network <- factor(res$bn,levels=unique(res$bn)[c(2,7,5,4,3,1,6)])
unique(res$bn)[c(2,7,5,4,3,1,6)]
##
library(ggplot2)
# library(ggpubr)
res$famIndic <- ifelse(res$famSpec==res$famTrue,TRUE,FALSE)
p1a <- ggplot(dplyr::filter(res,famIndic==TRUE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1a
res <- dplyr::filter(res,!(bn %in% c('asia','sachs')))
res$bn <- paste(res$bn,'\n(p=',res$p,')',sep='')
res$network <- factor(res$bn,levels=unique(res$bn)[c(2,7,5,4,3,1,6)])
##
library(ggplot2)
# library(ggpubr)
res$famIndic <- ifelse(res$famSpec==res$famTrue,TRUE,FALSE)
p1a <- ggplot(dplyr::filter(res,famIndic==TRUE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1a
load('~/UCLA/nonGauss_scms/bnlearn architectures/adjmats.rdata')
fname <- '~/UCLA/nonGauss_scms/simulations/7 January 2022/results.rdata'
load(fname)
resMost <- dplyr::filter(results,bn!='andes') # since these are in next to .rdata files below
dim(results)
#
fname <- "~/UCLA/nonGauss_scms/simulations/7 January 2022/resultsAndesLaplaceSpec.rdata"
load(fname)
dim(results)
resMost <- rbind(resMost,results)
#
fname <- '~/UCLA/nonGauss_scms/simulations/7 January 2022/resultsAndesAndAlarm.rdata'
load(fname)
dim(results)
results <- rbind(resMost,results)
dim(results)
##
results$ratio <- round(results$n/results$p,digits=1)
colnames(results)
##
library(reshape2)
res <- melt(data=results,id.vars=c('bn','n','p','rep','famSpec','famTrue','ratio'),
measure.vars = c('err.ours','err.dlingam','err.highD'),value.name='error')
res2 <- melt(data=results,id.vars=c('bn','n','p','rep','famSpec','famTrue','ratio'),
measure.vars = c('tm.ours','tm.dlingam','tm.highD'),value.name='time')
colnames(res)
res$algorithm <- ifelse(res$variable=='err.ours','ScoreLiNGAM',
ifelse(res$variable=='err.dlingam','DirectLiNGAM','HighDimLiNGAM'))
res$time <- res2$time
res$famSpec <- ifelse(res$famSpec=='laplace','Laplace',ifelse(res$famSpec=='logistic','Logistic',
'Scaled-t (df=10)' ))
res$famTrue <- ifelse(res$famTrue=='laplace','Laplace',ifelse(res$famTrue=='logistic','Logistic',
'Scaled-t (df=10)' ))
res$fam <- paste('Specified: ',res$famSpec,'\nTrue:',res$famTrue)
res <- dplyr::filter(res,!(bn %in% c('asia','sachs')))
res$bn <- paste(res$bn,'\n(p=',res$p,')',sep='')
res$network <- factor(res$bn,levels=unique(res$bn)[c(2,7,5,4,3,1,6)])
##
library(ggplot2)
# library(ggpubr)
res$famIndic <- ifelse(res$famSpec==res$famTrue,TRUE,FALSE)
p1a <- ggplot(dplyr::filter(res,famIndic==TRUE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1a
#
p1b <- ggplot(dplyr::filter(res,famIndic==FALSE),aes(x=factor(ratio),y=error,fill=algorithm))+
xlab('ratio: n/p')+ylab('proportion of parents sorted after a child')+
geom_boxplot()+
# stat_summary(
#   fun.y = median,
#   geom = 'line',
#   aes(group = algorithm, colour = algorithm),
#   position = position_dodge(width = 0.9) #this has to be added
# )+
facet_grid(rows=vars(fam),cols=vars(network))+
theme_classic()+
# theme(
#   plot.title = element_text(face = "bold", size = 12),
#   legend.background = element_rect(fill = "white", size = 4, colour = "white"),
#   legend.justification = 'bottom',
#   legend.position = 'bottom',
#   axis.ticks = element_line(colour = "grey70", size = 0.2),
#   panel.grid.major = element_line(colour = "grey70", size = 0.2),
#   panel.grid.minor = element_blank()
# )
theme(
# plot.title = element_text( size = 14),
legend.title = element_text(face='bold', size = 12),legend.text=element_text( size = 12),
axis.title = element_text(face = "bold", size = 14), axis.text = element_text( size = 13),
strip.text = element_text(face='bold',size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = 'bottom',
legend.position = 'bottom',
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
p1b
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_correctSpec.png',
plot=p1b,units='in',width=6.75*2,height=3.25*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_incorrectSpec.png',
plot=p1b,units='in',width=6.75*2,height=3.25*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_correctSpec.png',
plot=p1a,units='in',width=6.75*2,height=3.25*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_incorrectSpec.png',
plot=p1b,units='in',width=6.75*2,height=3.25*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_correctSpec.png',
plot=p1a,units='in',width=6.75*2,height=4*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_incorrectSpec.png',
plot=p1b,units='in',width=6.75*2,height=4*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_correctSpec.png',
plot=p1a,units='in',width=6.75*2,height=4.25*2)
ggsave(filename = '~/UCLA/nonGauss_scms/simulations/7 January 2022/sortError_incorrectSpec.png',
plot=p1b,units='in',width=6.75*2,height=4.25*2)
library(scorelingam)
library(printr)
install.packages('printr')
library(printr)
printr(help("scorelingam"))
help("scorelingam")
devtools::build_manual(pkg='scorelingam')
getwd()
setwd('~/UCLA/nonGauss_scms/r-package/scorelingam/')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
devtools::build_manual(pkg='.')
setwd('~/UCLA/nonGauss_scms/r-package/scorelingam/')
A
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
devtools::document()
devtools::build_manual()
devtools::build_manual(path = './man/')
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
setwd('~/UCLA/nonGauss_scms/r-package/scorelingam/')
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
devtools::build_manual(path = './man/')
setwd('~/UCLA/nonGauss_scms/r-package/scorelingam/')
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
devtools::build_manual(path = './man/')
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
# add pdf manual
devtools::build_manual(path = './man/')
setwd('~/UCLA/nonGauss_scms/r-package/scorelingam/')
devtools::build_manual(path = './man/')
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
# add pdf manual
devtools::build_manual(path = './man/')
#
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
# add pdf manual
devtools::build_manual(path = './man/')
#
Rcpp::compileAttributes()
# set to false if updating package
tools::package_native_routine_registration_skeleton(dir = "~/UCLA/nonGauss_scms/r-package/scorelingam/", character_only = TRUE)
help(scorelingam::scorelingam)
###
# document r functions
devtools::document()
# add pdf manual
devtools::build_manual(path = './man/')
#
